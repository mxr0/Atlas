
- config = local_assigns[:only] || %i[limit notification questions].excluding(local_assigns[:except])

.hint = translate('cms.hints.event.registration_mode', native: translate_enum_value(@record, :registration_mode, :native))
.hint = translate('cms.hints.event.registration_url', native: translate_enum_value(@record, :registration_mode, :native))

.fields
  = f.input :registration_mode, collection: Event.registration_modes.map { |k, v| [translate_enum_value(Event, :registration_mode, k), k] }, wrapper_html: { class: 'sixteen wide' }
  = f.input :registration_url, as: :url, wrapper_html: { class: 'twelve wide', style: 'display: none' }

= help_link :registration
br

.event_registration_config
  div class=(config.include?(:limit) && config.include?(:notification) ? 'two fields' : 'field')
    - if config.include? :limit
      = f.input :registration_limit, placeholder: translate('cms.hints.unlimited'), hint: translate('cms.hints.event.registration_limit')

    - if config.include? :notification
      = f.input :registration_notification, collection: Event.registration_notifications.map { |k, v| [translate_enum_value(Event, :registration_notification, k), k] }, hint: translate('cms.hints.event.registration_notification')

  - if config.include? :questions
    - registration_questions = Event.registration_questions.pairs.map { |k,v| [translate_enum_value(Event, :registration_questions, v), v] }.to_h
    = f.input :registration_question, as: :check_boxes, collection: registration_questions, hint: translate('cms.hints.event.registration_question')
